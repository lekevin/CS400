//Kevin Le
//M547H365

#include <iostream>
using namespace std;

bool IsNumberPrime(int num)		//basically just finds the prime true or false
{
bool isPrime = true;

if (num <= 1)	//if num less than 1 then return false (primes only exist 1 - inf.)

    return false;

for(int i = 2; i*i <= num; i++)		//trying to find a number by which another number is to be divided (checking if it divides)
    {
        if(num % i == 0)
        {
            isPrime = false; 	//divisor found so not prime
            break;
        }
	}
    return isPrime;
}

int main()
{




	
int num;
int primeNumber;

cout<<"Enter positive number to find cofficient" << endl;

cin >> num;		//takes in value to find coeffitient

if (num < 0)	//makes it is positive

num = - num;

unsigned int sequence =0;

int coefficientA = 0;

int coefficientB = 0;

for(int i = -num; i <=num ; i++)		

{
      for(int j = -num; j <= num ; j++)
      {
        unsigned int count =0;

        while(IsNumberPrime(count*count + i*count+j))		//files through numbers to take in the two coefficients (A and B)
        {
          count++;
        }
        if(sequence < count)
        {
          sequence = count;

          coefficientA=i;	//setting i and j indexes to respective coefficient 

          coefficientB=j;
        }
      }
}
      cout << "A " << coefficientA << " B " << coefficientB << endl;

cout << "40 prime number generated by n2+n+41 as below" << endl;

for (int i =0; i < 40; i++)		//indexing for i less than 40 and adding 41 per the formula 
{
primeNumber = i*i + i+ 41;		//41 because 40 prime number

if(IsNumberPrime(primeNumber))

     cout<< primeNumber << " ";
}
cout << endl <<"80 prime number generated by n2-79n+1601 as below" << endl;

for (int i =0; i < 80; i++)		//indexing for i less than 80 and adding 1601 per the formula
{
primeNumber = i*i -79* i +1601;

if(IsNumberPrime(primeNumber))

     cout<< primeNumber << " ";
}
return 0;
}